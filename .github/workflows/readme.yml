name: Update README with Current Issues

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Get current milestone
        id: milestone
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          MILESTONE_TITLE=$(gh api graphql -f query='
            query($owner: String!, $repo: String!) {
              repository(owner: $owner, name: $repo) {
                milestones(states: OPEN, first: 1, orderBy: {field: DUE_DATE, direction: ASC}) {
                  nodes { title }
                }
              }
            }' -f owner='${{ github.repository_owner }}' -f repo='${{ github.event.repository.name }}' | jq -r '.data.repository.milestones.nodes[0].title')
          echo "title=$MILESTONE_TITLE" >> $GITHUB_OUTPUT

      - name: Fetch issues and format them
        id: issues
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Haalt de issues op en formatteert ze als Markdown tabelrijen
          # De '%0A' aan het eind zorgt voor een correcte newline karakter
          ISSUES_LIST=$(gh issue list --state open --milestone "${{ steps.milestone.outputs.title }}" --limit 5 --json title,url --template '{{range .}}| [{{.title}}]({{.url}}) |%0A{{end}}')
          echo "ISSUES_TABLE=$ISSUES_LIST" >> $GITHUB_ENV

      - name: Replace __MILESTONE_ISSUES__
        run: |
          sed -i 's/__MILESTONE_ISSUES__/${{ env.ISSUES_TABLE }}/g' README.md

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git diff --quiet && git diff --staged --quiet || (git commit -m "docs: update milestone issues in README" && git push)